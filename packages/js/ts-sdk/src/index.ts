/**
 * Generated by orval v7.11.2 🍺
 * Do not edit manually.
 * Reelix Discovery Agent API
 * OpenAPI spec version: 0.1.0
 */
export type Health200 = {
  status?: string;
  service?: string;
};

export type healthResponse200 = {
  data: Health200
  status: 200
}
    
export type healthResponseComposite = healthResponse200;
    
export type healthResponse = healthResponseComposite & {
  headers: Headers;
}

export const getHealthUrl = () => {


  

  return `/health`
}

export const health = async ( options?: RequestInit): Promise<healthResponse> => {
  
  const res = await fetch(getHealthUrl(),
  {      
    ...options,
    method: 'GET'
    
    
  }
)

  const body = [204, 205, 304].includes(res.status) ? null : await res.text()
  const data: healthResponse['data'] = body ? JSON.parse(body) : {}

  return { data, status: res.status, headers: res.headers } as healthResponse
}

